<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.1011.1414                               -->
<workbook original-version='18.1' source-build='2024.2.4 (20242.24.1011.1414)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-style' value='as-phased' />
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Task 1' inline='true' name='federated.1wol0061dakj671bhu6k80zirls2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Task 1' name='textscan.05d25dr1w7wr6311cvh4a1ljeq31'>
            <connection class='textscan' directory='C:/Users/hnlaw/OneDrive - HKUST Connect/UST/Year 4/Fall/COMP 4462/Project/Cleaned Data/Concat 2015-2022' filename='Task 1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.05d25dr1w7wr6311cvh4a1ljeq31' name='Task 1.csv' table='[Task 1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_HK' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='biofuel_consumption' ordinal='2' />
            <column datatype='real' name='coal_consumption' ordinal='3' />
            <column datatype='real' name='fossil_fuel_consumption' ordinal='4' />
            <column datatype='real' name='gas_consumption' ordinal='5' />
            <column datatype='real' name='hydro_consumption' ordinal='6' />
            <column datatype='real' name='low_carbon_consumption' ordinal='7' />
            <column datatype='real' name='nuclear_consumption' ordinal='8' />
            <column datatype='real' name='oil_consumption' ordinal='9' />
            <column datatype='real' name='other_renewable_consumption' ordinal='10' />
            <column datatype='real' name='renewables_consumption' ordinal='11' />
            <column datatype='real' name='solar_consumption' ordinal='12' />
            <column datatype='real' name='wind_consumption' ordinal='13' />
            <column datatype='real' name='total_consumption' ordinal='14' />
            <column datatype='real' name='Happiness Score' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.05d25dr1w7wr6311cvh4a1ljeq31' name='Task 1.csv' table='[Task 1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_HK' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='biofuel_consumption' ordinal='2' />
            <column datatype='real' name='coal_consumption' ordinal='3' />
            <column datatype='real' name='fossil_fuel_consumption' ordinal='4' />
            <column datatype='real' name='gas_consumption' ordinal='5' />
            <column datatype='real' name='hydro_consumption' ordinal='6' />
            <column datatype='real' name='low_carbon_consumption' ordinal='7' />
            <column datatype='real' name='nuclear_consumption' ordinal='8' />
            <column datatype='real' name='oil_consumption' ordinal='9' />
            <column datatype='real' name='other_renewable_consumption' ordinal='10' />
            <column datatype='real' name='renewables_consumption' ordinal='11' />
            <column datatype='real' name='solar_consumption' ordinal='12' />
            <column datatype='real' name='wind_consumption' ordinal='13' />
            <column datatype='real' name='total_consumption' ordinal='14' />
            <column datatype='real' name='Happiness Score' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;HK$&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_HK&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>biofuel_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[biofuel_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>biofuel_consumption</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>coal_consumption</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fossil_fuel_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fossil_fuel_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>fossil_fuel_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>gas_consumption</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hydro_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hydro_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>hydro_consumption</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low_carbon_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low_carbon_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>low_carbon_consumption</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuclear_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nuclear_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>nuclear_consumption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>oil_consumption</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_renewable_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_renewable_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>other_renewable_consumption</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renewables_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[renewables_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>renewables_consumption</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>solar_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[solar_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>solar_consumption</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>wind_consumption</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_consumption]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>total_consumption</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[Task 1.csv]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized Total Energy Consumption' datatype='real' name='[Calculation_965177709850243077 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([total_consumption]) - WINDOW_MIN(SUM([total_consumption])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([total_consumption])) - WINDOW_MIN(SUM([total_consumption])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Normalized Happiness' datatype='real' name='[Calculation_965177709850243077]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Happiness Score]) - WINDOW_MIN(SUM([Happiness Score])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Happiness Score])) - WINDOW_MIN(SUM([Happiness Score])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' default-format='c#,##0.00&quot; / 10&quot;;(#,##0.00&quot; / 10&quot;)' name='[Happiness Score]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Task 1.csv' datatype='table' name='[__tableau_internal_object_id__].[Task 1.csv_C3C06120647D4EE89870C5197B2D774A]' role='measure' type='quantitative' />
      <column caption='Biofuel Consumption' datatype='real' name='[biofuel_consumption]' role='measure' type='quantitative' />
      <column caption='Coal Consumption' datatype='real' name='[coal_consumption]' role='measure' type='quantitative' />
      <column caption='Fossil Fuel Consumption' datatype='real' name='[fossil_fuel_consumption]' role='measure' type='quantitative' />
      <column caption='Gas Consumption' datatype='real' name='[gas_consumption]' role='measure' type='quantitative' />
      <column caption='Hydro Consumption' datatype='real' name='[hydro_consumption]' role='measure' type='quantitative' />
      <column caption='Low Carbon Consumption' datatype='real' name='[low_carbon_consumption]' role='measure' type='quantitative' />
      <column caption='Nuclear Consumption' datatype='real' name='[nuclear_consumption]' role='measure' type='quantitative' />
      <column caption='Oil Consumption' datatype='real' name='[oil_consumption]' role='measure' type='quantitative' />
      <column caption='Other Renewable Consumption' datatype='real' name='[other_renewable_consumption]' role='measure' type='quantitative' />
      <column caption='Renewables Consumption' datatype='real' name='[renewables_consumption]' role='measure' type='quantitative' />
      <column caption='Solar Consumption' datatype='real' name='[solar_consumption]' role='measure' type='quantitative' />
      <column caption='Total Energy Consumption' datatype='real' default-format='c#,##0&quot;TWh&quot;;(#,##0&quot;TWh&quot;)' name='[total_consumption]' role='measure' type='quantitative' />
      <column caption='Wind Consumption' datatype='real' name='[wind_consumption]' role='measure' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_consumption]' derivation='Avg' name='[avg:total_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_consumption]' derivation='Sum' name='[sum:total_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_965177709850243077 1]' derivation='User' name='[usr:Calculation_965177709850243077 1:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_965177709850243077 1]' derivation='User' name='[usr:Calculation_965177709850243077 1:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1wol0061dakj671bhu6k80zirls2].[Country]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_965177709850243077]' derivation='User' name='[usr:Calculation_965177709850243077:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_965177709850243077]' derivation='User' name='[usr:Calculation_965177709850243077:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1wol0061dakj671bhu6k80zirls2].[Country]' ordering-type='Field' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wol0061dakj671bhu6k80zirls2].[avg:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wol0061dakj671bhu6k80zirls2].[usr:Calculation_965177709850243077:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wol0061dakj671bhu6k80zirls2].[usr:Calculation_965177709850243077:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wol0061dakj671bhu6k80zirls2].[avg:total_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wol0061dakj671bhu6k80zirls2].[sum:total_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wol0061dakj671bhu6k80zirls2].[usr:Calculation_965177709850243077 1:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wol0061dakj671bhu6k80zirls2].[usr:Calculation_965177709850243077 1:qk:2]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Task 1.csv' id='Task 1.csv_C3C06120647D4EE89870C5197B2D774A'>
            <properties context=''>
              <relation connection='textscan.05d25dr1w7wr6311cvh4a1ljeq31' name='Task 1.csv' table='[Task 1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_HK' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='biofuel_consumption' ordinal='2' />
                  <column datatype='real' name='coal_consumption' ordinal='3' />
                  <column datatype='real' name='fossil_fuel_consumption' ordinal='4' />
                  <column datatype='real' name='gas_consumption' ordinal='5' />
                  <column datatype='real' name='hydro_consumption' ordinal='6' />
                  <column datatype='real' name='low_carbon_consumption' ordinal='7' />
                  <column datatype='real' name='nuclear_consumption' ordinal='8' />
                  <column datatype='real' name='oil_consumption' ordinal='9' />
                  <column datatype='real' name='other_renewable_consumption' ordinal='10' />
                  <column datatype='real' name='renewables_consumption' ordinal='11' />
                  <column datatype='real' name='solar_consumption' ordinal='12' />
                  <column datatype='real' name='wind_consumption' ordinal='13' />
                  <column datatype='real' name='total_consumption' ordinal='14' />
                  <column datatype='real' name='Happiness Score' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Correlation between Happiness and Total Energy Consumption</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Task 1' name='federated.1wol0061dakj671bhu6k80zirls2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wol0061dakj671bhu6k80zirls2'>
            <column caption='Normalized Total Energy Consumption' datatype='real' name='[Calculation_965177709850243077 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([total_consumption]) - WINDOW_MIN(SUM([total_consumption])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([total_consumption])) - WINDOW_MIN(SUM([total_consumption])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Normalized Happiness' datatype='real' name='[Calculation_965177709850243077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Happiness Score]) - WINDOW_MIN(SUM([Happiness Score])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Happiness Score])) - WINDOW_MIN(SUM([Happiness Score])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' default-format='c#,##0.00&quot; / 10&quot;;(#,##0.00&quot; / 10&quot;)' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_consumption]' derivation='Avg' name='[avg:total_consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column caption='Total Energy Consumption' datatype='real' default-format='c#,##0&quot;TWh&quot;;(#,##0&quot;TWh&quot;)' name='[total_consumption]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_965177709850243077 1]' derivation='User' name='[usr:Calculation_965177709850243077 1:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1wol0061dakj671bhu6k80zirls2].[Country]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_965177709850243077]' derivation='User' name='[usr:Calculation_965177709850243077:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1wol0061dakj671bhu6k80zirls2].[Country]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wol0061dakj671bhu6k80zirls2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wol0061dakj671bhu6k80zirls2].[usr:Calculation_965177709850243077:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wol0061dakj671bhu6k80zirls2].[usr:Calculation_965177709850243077 1:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wol0061dakj671bhu6k80zirls2].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wol0061dakj671bhu6k80zirls2].[none:Country:nk]</column>
            <column>[federated.1wol0061dakj671bhu6k80zirls2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wol0061dakj671bhu6k80zirls2].[Longitude (generated)]' field-type='quantitative' max='19469351.733501926' min='-24415356.209593937' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wol0061dakj671bhu6k80zirls2].[Latitude (generated)]' field-type='quantitative' max='18233311.059629299' min='-12114079.140775416' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1wol0061dakj671bhu6k80zirls2].[Latitude (generated)]' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-style' value='as-phased' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wol0061dakj671bhu6k80zirls2].[:Measure Names]' />
              <lod column='[federated.1wol0061dakj671bhu6k80zirls2].[none:Country:nk]' />
              <size column='[federated.1wol0061dakj671bhu6k80zirls2].[Multiple Values]' />
              <tooltip column='[federated.1wol0061dakj671bhu6k80zirls2].[avg:Happiness Score:qk]' />
              <tooltip column='[federated.1wol0061dakj671bhu6k80zirls2].[avg:total_consumption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wol0061dakj671bhu6k80zirls2].[Latitude (generated)]</rows>
        <cols>[federated.1wol0061dakj671bhu6k80zirls2].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1wol0061dakj671bhu6k80zirls2].[none:Year:ok]</column>
        </pages>
        <page-trail-options lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{2430B7BB-A64D-4592-A4E6-E012ACFB998D}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wol0061dakj671bhu6k80zirls2].[none:Country:nk]' type='filter' />
            <card looped='1' type='currpage' />
            <card pane-specification-id='1' param='[federated.1wol0061dakj671bhu6k80zirls2].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.1wol0061dakj671bhu6k80zirls2].[Multiple Values]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2021</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1wol0061dakj671bhu6k80zirls2].[:Measure Names]</field>
            <field>[federated.1wol0061dakj671bhu6k80zirls2].[avg:Happiness Score:qk]</field>
            <field>[federated.1wol0061dakj671bhu6k80zirls2].[none:Country:nk]</field>
            <field>[federated.1wol0061dakj671bhu6k80zirls2].[none:Year:qk]</field>
            <field>[federated.1wol0061dakj671bhu6k80zirls2].[sum:total_consumption:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42E2FAB8-B865-48DE-B9F8-C1D1B91C1131}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      fLoxPnrlhBQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
